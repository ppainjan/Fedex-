package fedEx;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class Liabrary {
	
	private Connection getDbConnection(){
 
		Connection con = null;
		try {
			Class.forName("com.mysql.jdbc.Driver");
			con = DriverManager.getConnection("jdbc:mysql://localhost:3306/fed_ex","root","root");
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e1) {
			e1.printStackTrace();
		}  
		return con;
	}
	
	public void createOrder(Map<String, String> orderData){
		
		Connection con  = getDbConnection();
		String query = "INSERT INTO fed_ex.orders(Service,weight,dimensions,signature_service,total_pieces,"
				+ "packaging,special_handeling_section,order_shortest_travel,order_status) VALUES(?,?,?,?,?,?,?,?,?)";
		PreparedStatement st;
		int trackingId = 0;
		try {
			
			st = con.prepareStatement(query,Statement.RETURN_GENERATED_KEYS);
			st.setString(1, orderData.get("service").toString());
			st.setString(2, orderData.get("weight").toString());
			st.setString(3, orderData.get("dimensions").toString());
			st.setString(4, orderData.get("signature_service").toString());
			st.setInt(5, Integer.parseInt(orderData.get("total_pieces").toString()));
			st.setString(6, orderData.get("packaging").toString());
			st.setString(7, orderData.get("special_handeling_section").toString());
			st.setString(8, "");
			st.setString(9, "In Transit");
			st.executeUpdate();
			ResultSet rs = st.getGeneratedKeys();
			if(rs.next())
				trackingId = rs.getInt(1);
			
			rs.close();
			st.close();
			con.close();
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
		
		if(trackingId!=0){
			String queryTracking = "INSERT INTO fed_ex.order_tracking(tracking_id,city,city_status,tracking_date)VALUES(?,?,?,?)";
			PreparedStatement st1;
			try{
				st1= con.prepareStatement(queryTracking);
				st1.setInt(1, trackingId);
				st1.setInt(2, getCityIdFromName(orderData.get("sourceCity").toString()));
				st1.setString(3, orderData.get("curr_tracking_status").toString());
				st1.setTimestamp(4, new Timestamp(System.currentTimeMillis()));
			}
			catch(SQLException se){
				se.printStackTrace();
			}
		}
	}

	public void orderTracker(Map<String,String>trackingData){
		
		Connection con = getDbConnection();
		String query = "INSERT INTO fed_ex.order_tracking(tracking_id,city,city_status,tracking_date)VALUES(?,?,?,?)";
		
		
		
		try{
			PreparedStatement st = con.prepareStatement(query);
			st.setInt(1, Integer.parseInt(trackingData.get("tracking_id").toString()));
			st.setInt(2, getCityIdFromName(trackingData.get("city").toString()));
			st.setString(3, trackingData.get("curr_tracking_status").toString());
			st.setTimestamp(4, new Timestamp(System.currentTimeMillis()));
		}
		catch(SQLException se){
			se.printStackTrace();
		}
	}
	
	private int getCityIdFromName(String city){
		
		Connection con = getDbConnection();
		String query = "select city_id from city where city_name = "+city;
		int cityId = 0;
		try{
			PreparedStatement st = con.prepareStatement(query);
			ResultSet rs = st.executeQuery();
			cityId = rs.getInt(0);
		}
		catch(SQLException se){
			se.printStackTrace();
		}
		return cityId;
	}
	
	public List<String> getOrderStatus(int trackingId){
		
		Connection con = getDbConnection();
		String query = "Slect city,city_status,tracking_date from fed_ex.order_tracking where tracking_id = "+trackingId+" ordered by tracking_date desc";
		PreparedStatement st;
		ResultSet rs;
		List<String> trackingData = new ArrayList<String>();
		try{
			st = con.prepareStatement(query);
			rs = st.executeQuery();
			while(rs.next()){
				String track;
				track = rs.getString(0)+"@"+rs.getString(1)+"@"+rs.getTimestamp(2).toString();
				trackingData.add(track);
			}
			
		}
		catch(SQLException se)
		{
			se.printStackTrace();
		}
		return trackingData;
	}
	
	public String getOrderInfo(int trackingId){
		
		Connection con = getDbConnection();
		String query = "Slect * from fed_ex.orders where tracking_id = "+trackingId;
		PreparedStatement st;
		ResultSet rs;
		String orderInfo = null;
		try{
			st = con.prepareStatement(query);
			rs = st.executeQuery();
			while(rs.next()){
				orderInfo = rs.getInt(0)+"@"+rs.getString(1)+"@"+rs.getString(2)+"@"+rs.getString(3)+"@"+rs.getString(4)+"@"+rs.getInt(5)+"@"+rs.getString(6)+"@"+rs.getString(7)+"@"+rs.getString(8)+"@"+rs.getString(9);
			}
			
		}
		catch(SQLException se)
		{
			se.printStackTrace();
		}
		return orderInfo;
		
		
		
	}
}
